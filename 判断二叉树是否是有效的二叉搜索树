假设一个二叉搜索树具有如下特征：
  节点的左子树只包含小于当前节点的数。
  节点的右子树只包含大于当前节点的数。
  所有左子树和右子树自身必须也是二叉搜索树。
  
思路：使用递归
/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     public $val = null;
 *     public $left = null;
 *     public $right = null;
 *     function __construct($value) { $this->val = $value; }
 * }
 */
class Solution {

    /**
     * @param TreeNode $root
     * @return Boolean
     */
    function isValidBST($root) {
        return $this->helper($root,null,null);
    }
    function helper($node,$lower,$upper){
        if( is_null($node)) return true;
        if( !is_null($lower) ){
             if($node->val <= $lower ) return false;
        }
        if( !is_null($upper) ){
             if($node->val >= $upper) return false;
        }
       
        $l = $this->helper($node->left,$lower,$node->val);
        $r = $this->helper($node->right,$node->val,$upper);
        return $l && $r;
    }
}
